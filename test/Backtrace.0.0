=== If no file names and line numbers are shown below, one can run
            addr2line -Cpfie my_exefile my_line_address
    to convert `my_line_address` (e.g., 0x4a6b) into file name and line number.
    Or one can use amrex/Tools/Backtrace/parse_bt.py.

=== Please note that the line number reported by addr2line may not be accurate.
    One can use
            readelf -wl my_exefile | grep my_line_address'
    to find out the offset for that line.

 0: ./swam(+0x145254) [0x5617566d8254]
    amrex::BLBackTrace::print_backtrace_info(_IO_FILE*) at /home/federico/amrex/Src/Base/AMReX_BLBackTrace.cpp:179

 1: ./swam(+0x148bdf) [0x5617566dbbdf]
    amrex::BLBackTrace::handler(int) at /home/federico/amrex/Src/Base/AMReX_BLBackTrace.cpp:85

 2: /lib/x86_64-linux-gnu/libc.so.6(+0x3ef20) [0x7ff00a02bf20]

 3: ./swam(+0x50a16) [0x5617565e3a16]
    amrex::BaseFab<double>::copy<(amrex::RunOn)1>(amrex::BaseFab<double> const&, amrex::Box const&, int, amrex::Box const&, int, int)::{lambda(int, int, int, int)#1}::operator()(int, int, int, int) const at /home/federico/amrex/Src/Base/AMReX_BaseFab.H:1882
 (inlined by) void amrex::LoopConcurrentOnCpu<amrex::BaseFab<double>::copy<(amrex::RunOn)1>(amrex::BaseFab<double> const&, amrex::Box const&, int, amrex::Box const&, int, int)::{lambda(int, int, int, int)#1}>(amrex::Box const&, int, amrex::BaseFab<double>::copy<(amrex::RunOn)1>(amrex::BaseFab<double> const&, amrex::Box const&, int, amrex::Box const&, int, int)::{lambda(int, int, int, int)#1}&&) at /home/federico/amrex/Src/Base/AMReX_Loop.H:210

 4: ./swam(+0x5167e) [0x5617565e467e]
    amrex::FabArray<amrex::FArrayBox>::PC_local_cpu(amrex::FabArrayBase::CPC const&, amrex::FabArray<amrex::FArrayBox> const&, int, int, int, amrex::FabArrayBase::CpOp) [clone ._omp_fn.2] at /home/federico/amrex/Src/Base/AMReX_BaseFab.H:1882
 (inlined by) amrex::FabArray<amrex::FArrayBox>::PC_local_cpu(amrex::FabArrayBase::CPC const&, amrex::FabArray<amrex::FArrayBox> const&, int, int, int, amrex::FabArrayBase::CpOp) at /home/federico/amrex/Src/Base/AMReX_PCI.H:27

 5: /usr/lib/x86_64-linux-gnu/libgomp.so.1(GOMP_parallel+0x3f) [0x7ff00a822edf]
    ?? ??:0

 6: ./swam(+0x52911) [0x5617565e5911]
    amrex::FabArray<amrex::FArrayBox>::PC_local_cpu(amrex::FabArrayBase::CPC const&, amrex::FabArray<amrex::FArrayBox> const&, int, int, int, amrex::FabArrayBase::CpOp) at /home/federico/amrex/Src/Base/AMReX_PCI.H:16

 7: ./swam(+0x60d43) [0x5617565f3d43]
    amrex::FabArray<amrex::FArrayBox>::ParallelCopy_nowait(amrex::FabArray<amrex::FArrayBox> const&, int, int, int, amrex::IntVect const&, amrex::IntVect const&, amrex::Periodicity const&, amrex::FabArrayBase::CpOp, amrex::FabArrayBase::CPC const*) at /home/federico/amrex/Src/Base/AMReX_FabArrayCommI.H:350

 8: ./swam(+0x136f53) [0x5617566c9f53]
    ?? ??:0

 9: ./swam(+0x1372dd) [0x5617566ca2dd]
    amrex::average_down(amrex::MultiFab const&, amrex::MultiFab&, amrex::Geometry const&, amrex::Geometry const&, int, int, int) at /home/federico/amrex/Src/Base/AMReX_MultiFabUtil.cpp:256

10: ./swam(+0x22082) [0x5617565b5082]
    ?? ??:0

11: ./swam(+0x1f199) [0x5617565b2199]
    ?? ??:0

12: ./swam(+0x185b4) [0x5617565ab5b4]
    ?? ??:0

13: ./swam(+0x18918) [0x5617565ab918]
    ?? ??:0

14: /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xe7) [0x7ff00a00eb97]

15: ./swam(+0xed6a) [0x5617565a1d6a]
    ?? ??:0

